# -*- coding: utf-8 -*-

"""
    mundiapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from mundiapi.api_helper import APIHelper
from mundiapi.configuration import Configuration
from mundiapi.controllers.base_controller import BaseController
from mundiapi.http.auth.basic_auth import BasicAuth
from mundiapi.models.get_transaction_response import GetTransactionResponse

class TransactionsController(BaseController):

    """A Controller to access Endpoints in the mundiapi API."""


    def get_transaction(self,
                        transaction_id):
        """Does a GET request to /transactions/{transaction_id}.

        TODO: type endpoint description here.

        Args:
            transaction_id (string): TODO: type description here. Example: 

        Returns:
            GetTransactionResponse: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/transactions/{transaction_id}'
        _url_path = APIHelper.append_url_with_template_parameters(_url_path, { 
            'transaction_id': transaction_id
        })
        _query_builder = Configuration.base_uri
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'accept': 'application/json'
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers)
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, GetTransactionResponse.from_dictionary)
