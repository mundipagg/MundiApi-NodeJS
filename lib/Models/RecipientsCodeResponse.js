/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of RecipientsCodeResponse
 */
class RecipientsCodeResponse extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.name = this.constructor.getValue(obj.name);
        this.email = this.constructor.getValue(obj.email);
        this.document = this.constructor.getValue(obj.document);
        this.description = this.constructor.getValue(obj.description);
        this.type = this.constructor.getValue(obj.type);
        this.status = this.constructor.getValue(obj.status);
        this.createdAt = this.constructor.getValue(obj.createdAt || obj.created_at);
        this.updatedAt = this.constructor.getValue(obj.updatedAt || obj.updated_at);
        this.deletedAt = this.constructor.getValue(obj.deletedAt || obj.deleted_at);
        this.defaultBankAccount =
          this.constructor.getValue(obj.defaultBankAccount
     || obj.default_bank_account);
        this.gatewayRecipients =
          this.constructor.getValue(obj.gatewayRecipients
     || obj.gateway_recipients);
        this.metadata = this.constructor.getValue(obj.metadata);
        this.automaticAnticipationSettings =
          this.constructor.getValue(obj.automaticAnticipationSettings
     || obj.automatic_anticipation_settings);
        this.transferSettings =
          this.constructor.getValue(obj.transferSettings
     || obj.transfer_settings);
        this.code = this.constructor.getValue(obj.code);
        this.paymentMode = this.constructor.getValue(obj.paymentMode || obj.payment_mode);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'name', realName: 'name' },
            { name: 'email', realName: 'email' },
            { name: 'document', realName: 'document' },
            { name: 'description', realName: 'description' },
            { name: 'type', realName: 'type' },
            { name: 'status', realName: 'status' },
            {
                name: 'createdAt',
                realName: 'created_at',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'updatedAt',
                realName: 'updated_at',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'deletedAt',
                realName: 'deleted_at',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'defaultBankAccount',
                realName: 'default_bank_account',
                type: 'DefaultBankAccount',
            },
            {
                name: 'gatewayRecipients',
                realName: 'gateway_recipients',
                array: true,
                type: 'GetGatewayRecipientResponse',
            },
            { name: 'metadata', realName: 'metadata' },
            {
                name: 'automaticAnticipationSettings',
                realName: 'automatic_anticipation_settings',
                type: 'CreateAutomaticAnticipationSettingsRequest',
            },
            {
                name: 'transferSettings',
                realName: 'transfer_settings',
                type: 'GetTransferSettingsResponse',
            },
            { name: 'code', realName: 'code' },
            { name: 'paymentMode', realName: 'payment_mode' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = RecipientsCodeResponse;
