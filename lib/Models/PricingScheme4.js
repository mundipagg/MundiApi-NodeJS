/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of PricingScheme4
 */
class PricingScheme4 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.schemeType = this.constructor.getValue(obj.schemeType || obj.scheme_type);
        this.priceBrackets = this.constructor.getValue(obj.priceBrackets || obj.price_brackets);
        this.price = this.constructor.getValue(obj.price);
        this.minimumPrice = this.constructor.getValue(obj.minimumPrice || obj.minimum_price);
        this.percentage = this.constructor.getValue(obj.percentage);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'schemeType', realName: 'scheme_type' },
            {
                name: 'priceBrackets',
                realName: 'price_brackets',
                array: true,
                type: 'CreatePriceBracketRequest',
            },
            { name: 'price', realName: 'price' },
            { name: 'minimumPrice', realName: 'minimum_price' },
            { name: 'percentage', realName: 'percentage' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = PricingScheme4;
