/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of CustomersRequest1
 */
class CustomersRequest1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.name = this.constructor.getValue(obj.name);
        this.email = this.constructor.getValue(obj.email);
        this.document = this.constructor.getValue(obj.document);
        this.type = this.constructor.getValue(obj.type);
        this.address = this.constructor.getValue(obj.address);
        this.metadata = this.constructor.getValue(obj.metadata);
        this.phones = this.constructor.getValue(obj.phones);
        this.code = this.constructor.getValue(obj.code);
        this.gender = this.constructor.getValue(obj.gender);
        this.documentType = this.constructor.getValue(obj.documentType || obj.document_type);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'name', realName: 'name' },
            { name: 'email', realName: 'email' },
            { name: 'document', realName: 'document' },
            { name: 'type', realName: 'type' },
            { name: 'address', realName: 'address', type: 'Address1' },
            { name: 'metadata', realName: 'metadata' },
            { name: 'phones', realName: 'phones', type: 'CreatePhonesRequest' },
            { name: 'code', realName: 'code' },
            { name: 'gender', realName: 'gender' },
            { name: 'documentType', realName: 'document_type' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = CustomersRequest1;
