/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of GetAddressResponse
 */
class GetAddressResponse extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.street = this.constructor.getValue(obj.street);
        this.number = this.constructor.getValue(obj.number);
        this.complement = this.constructor.getValue(obj.complement);
        this.zipCode = this.constructor.getValue(obj.zipCode || obj.zip_code);
        this.neighborhood = this.constructor.getValue(obj.neighborhood);
        this.city = this.constructor.getValue(obj.city);
        this.state = this.constructor.getValue(obj.state);
        this.country = this.constructor.getValue(obj.country);
        this.status = this.constructor.getValue(obj.status);
        this.createdAt = this.constructor.getValue(obj.createdAt || obj.created_at);
        this.updatedAt = this.constructor.getValue(obj.updatedAt || obj.updated_at);
        this.customer = this.constructor.getValue(obj.customer);
        this.metadata = this.constructor.getValue(obj.metadata);
        this.line1 = this.constructor.getValue(obj.line1 || obj.line_1);
        this.line2 = this.constructor.getValue(obj.line2 || obj.line_2);
        this.deletedAt = this.constructor.getValue(obj.deletedAt || obj.deleted_at);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'street', realName: 'street' },
            { name: 'number', realName: 'number' },
            { name: 'complement', realName: 'complement' },
            { name: 'zipCode', realName: 'zip_code' },
            { name: 'neighborhood', realName: 'neighborhood' },
            { name: 'city', realName: 'city' },
            { name: 'state', realName: 'state' },
            { name: 'country', realName: 'country' },
            { name: 'status', realName: 'status' },
            {
                name: 'createdAt',
                realName: 'created_at',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'updatedAt',
                realName: 'updated_at',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'customer', realName: 'customer', type: 'Customer' },
            { name: 'metadata', realName: 'metadata' },
            { name: 'line1', realName: 'line_1' },
            { name: 'line2', realName: 'line_2' },
            {
                name: 'deletedAt',
                realName: 'deleted_at',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = GetAddressResponse;
