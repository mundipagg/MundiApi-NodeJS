/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  dict,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  GetPlanItemResponse,
  getPlanItemResponseSchema,
} from './getPlanItemResponse';

/** Response object for getting a plan */
export interface GetPlanResponse {
  id: string;
  name: string;
  description: string;
  url: string;
  statementDescriptor: string;
  interval: string;
  intervalCount: number;
  billingType: string;
  paymentMethods: string[];
  installments: number[];
  status: string;
  currency: string;
  createdAt: string;
  updatedAt: string;
  items: GetPlanItemResponse[];
  billingDays: number[];
  shippable: boolean;
  metadata: Record<string, string>;
  trialPeriodDays?: number;
  minimumPrice?: number;
  deletedAt?: string;
}

export const getPlanResponseSchema: Schema<GetPlanResponse> = object({
  id: ['id', string()],
  name: ['name', string()],
  description: ['description', string()],
  url: ['url', string()],
  statementDescriptor: ['statement_descriptor', string()],
  interval: ['interval', string()],
  intervalCount: ['interval_count', number()],
  billingType: ['billing_type', string()],
  paymentMethods: ['payment_methods', array(string())],
  installments: ['installments', array(number())],
  status: ['status', string()],
  currency: ['currency', string()],
  createdAt: ['created_at', string()],
  updatedAt: ['updated_at', string()],
  items: ['items', array(lazy(() => getPlanItemResponseSchema))],
  billingDays: ['billing_days', array(number())],
  shippable: ['shippable', boolean()],
  metadata: ['metadata', dict(string())],
  trialPeriodDays: ['trial_period_days', optional(number())],
  minimumPrice: ['minimum_price', optional(number())],
  deletedAt: ['deleted_at', optional(string())],
});
