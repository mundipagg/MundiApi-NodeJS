/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import {
  GetSubscriptionItemResponse,
  getSubscriptionItemResponseSchema,
} from './getSubscriptionItemResponse';

/** Response object for getting a usage */
export interface GetUsageResponse {
  /** Id */
  id: string;
  /** Quantity */
  quantity: number;
  /** Description */
  description: string;
  /** Used at */
  usedAt: string;
  /** Creation date */
  createdAt: string;
  /** Status */
  status: string;
  deletedAt?: string;
  /** Subscription item */
  subscriptionItem: GetSubscriptionItemResponse;
  /** Identification code in the client system */
  code?: string;
  /** Identification group in the client system */
  group?: string;
  /** Field used in item scheme type 'Percent' */
  amount?: number;
}

export const getUsageResponseSchema: Schema<GetUsageResponse> = object({
  id: ['id', string()],
  quantity: ['quantity', number()],
  description: ['description', string()],
  usedAt: ['used_at', string()],
  createdAt: ['created_at', string()],
  status: ['status', string()],
  deletedAt: ['deleted_at', optional(string())],
  subscriptionItem: [
    'subscription_item',
    lazy(() => getSubscriptionItemResponseSchema),
  ],
  code: ['code', optional(string())],
  group: ['group', optional(string())],
  amount: ['amount', optional(number())],
});
