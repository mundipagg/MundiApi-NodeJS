/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import {
  GetRecipientResponse,
  getRecipientResponseSchema,
} from './getRecipientResponse';

/** Anticipation */
export interface GetAnticipationResponse {
  /** Id */
  id: string;
  /** Requested amount */
  requestedAmount: number;
  /** Approved amount */
  approvedAmount: number;
  /** Recipient */
  recipient?: GetRecipientResponse;
  /** Anticipation id on the gateway */
  pgid: string;
  /** Creation date */
  createdAt: string;
  /** Last update date */
  updatedAt: string;
  /** Payment date */
  paymentDate: string;
  /** Status */
  status: string;
  /** Timeframe */
  timeframe: string;
}

export const getAnticipationResponseSchema: Schema<GetAnticipationResponse> = object(
  {
    id: ['id', string()],
    requestedAmount: ['requested_amount', number()],
    approvedAmount: ['approved_amount', number()],
    recipient: ['recipient', optional(lazy(() => getRecipientResponseSchema))],
    pgid: ['pgid', string()],
    createdAt: ['created_at', string()],
    updatedAt: ['updated_at', string()],
    paymentDate: ['payment_date', string()],
    status: ['status', string()],
    timeframe: ['timeframe', string()],
  }
);
