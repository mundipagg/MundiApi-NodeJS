/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  GetDiscountResponse,
  getDiscountResponseSchema,
} from './getDiscountResponse';
import {
  GetIncrementResponse,
  getIncrementResponseSchema,
} from './getIncrementResponse';
import {
  GetPricingSchemeResponse,
  getPricingSchemeResponseSchema,
} from './getPricingSchemeResponse';
import {
  GetSubscriptionResponse,
  getSubscriptionResponseSchema,
} from './getSubscriptionResponse';

export interface GetSubscriptionItemResponse {
  id: string;
  description: string;
  status: string;
  createdAt: string;
  updatedAt: string;
  pricingScheme: GetPricingSchemeResponse;
  discounts: GetDiscountResponse[];
  increments: GetIncrementResponse[];
  subscription: GetSubscriptionResponse;
  /** Item name */
  name: string;
  quantity?: number;
  cycles?: number;
  deletedAt?: string;
}

export const getSubscriptionItemResponseSchema: Schema<GetSubscriptionItemResponse> = object(
  {
    id: ['id', string()],
    description: ['description', string()],
    status: ['status', string()],
    createdAt: ['created_at', string()],
    updatedAt: ['updated_at', string()],
    pricingScheme: [
      'pricing_scheme',
      lazy(() => getPricingSchemeResponseSchema),
    ],
    discounts: ['discounts', array(lazy(() => getDiscountResponseSchema))],
    increments: ['increments', array(lazy(() => getIncrementResponseSchema))],
    subscription: ['subscription', lazy(() => getSubscriptionResponseSchema)],
    name: ['name', string()],
    quantity: ['quantity', optional(number())],
    cycles: ['cycles', optional(number())],
    deletedAt: ['deleted_at', optional(string())],
  }
);
