/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  CreateCheckoutCardInstallmentOptionRequest,
  createCheckoutCardInstallmentOptionRequestSchema,
} from './createCheckoutCardInstallmentOptionRequest';
import {
  CreatePaymentAuthenticationRequest,
  createPaymentAuthenticationRequestSchema,
} from './createPaymentAuthenticationRequest';

/** Checkout card payment request */
export interface CreateCheckoutCreditCardPaymentRequest {
  /** Card invoice text descriptor */
  statementDescriptor?: string;
  /** Payment installment options */
  installments?: CreateCheckoutCardInstallmentOptionRequest[];
  /** Creates payment authentication */
  authentication?: CreatePaymentAuthenticationRequest;
  /** Authorize and capture? */
  capture?: boolean;
}

export const createCheckoutCreditCardPaymentRequestSchema: Schema<CreateCheckoutCreditCardPaymentRequest> = object(
  {
    statementDescriptor: ['statement_descriptor', optional(string())],
    installments: [
      'installments',
      optional(
        array(lazy(() => createCheckoutCardInstallmentOptionRequestSchema))
      ),
    ],
    authentication: [
      'authentication',
      optional(lazy(() => createPaymentAuthenticationRequestSchema)),
    ],
    capture: ['capture', optional(boolean())],
  }
);
