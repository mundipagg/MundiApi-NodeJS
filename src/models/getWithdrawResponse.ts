/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  GetWithdrawSourceResponse,
  getWithdrawSourceResponseSchema,
} from './getWithdrawSourceResponse';
import {
  GetWithdrawTargetResponse,
  getWithdrawTargetResponseSchema,
} from './getWithdrawTargetResponse';

export interface GetWithdrawResponse {
  id: string;
  gatewayId: string;
  amount: number;
  status: string;
  createdAt: string;
  updatedAt: string;
  metadata?: string[];
  fee?: number;
  fundingDate?: string;
  fundingEstimatedDate?: string;
  type: string;
  source: GetWithdrawSourceResponse;
  target: GetWithdrawTargetResponse;
}

export const getWithdrawResponseSchema: Schema<GetWithdrawResponse> = object({
  id: ['id', string()],
  gatewayId: ['gateway_id', string()],
  amount: ['amount', number()],
  status: ['status', string()],
  createdAt: ['created_at', string()],
  updatedAt: ['updated_at', string()],
  metadata: ['metadata', optional(array(string()))],
  fee: ['fee', optional(number())],
  fundingDate: ['funding_date', optional(string())],
  fundingEstimatedDate: ['funding_estimated_date', optional(string())],
  type: ['type', string()],
  source: ['source', lazy(() => getWithdrawSourceResponseSchema)],
  target: ['target', lazy(() => getWithdrawTargetResponseSchema)],
});
