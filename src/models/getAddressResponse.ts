/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { dict, lazy, object, optional, Schema, string } from '../schema';
import {
  GetCustomerResponse,
  getCustomerResponseSchema,
} from './getCustomerResponse';

/** Response object for getting an Address */
export interface GetAddressResponse {
  id: string;
  street: string;
  number: string;
  complement: string;
  zipCode: string;
  neighborhood: string;
  city: string;
  state: string;
  country: string;
  status: string;
  createdAt: string;
  updatedAt: string;
  customer?: GetCustomerResponse;
  metadata: Record<string, string>;
  /** Line 1 for address */
  line1: string;
  /** Line 2 for address */
  line2: string;
  deletedAt?: string;
}

export const getAddressResponseSchema: Schema<GetAddressResponse> = object({
  id: ['id', string()],
  street: ['street', string()],
  number: ['number', string()],
  complement: ['complement', string()],
  zipCode: ['zip_code', string()],
  neighborhood: ['neighborhood', string()],
  city: ['city', string()],
  state: ['state', string()],
  country: ['country', string()],
  status: ['status', string()],
  createdAt: ['created_at', string()],
  updatedAt: ['updated_at', string()],
  customer: ['customer', optional(lazy(() => getCustomerResponseSchema))],
  metadata: ['metadata', dict(string())],
  line1: ['line_1', string()],
  line2: ['line_2', string()],
  deletedAt: ['deleted_at', optional(string())],
});
