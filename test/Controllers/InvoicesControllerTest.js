/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.InvoicesController;
const SubscriptionsCyclesPayResponse = testerlib.SubscriptionsCyclesPayResponse;
const SubscriptionsCyclesPayRequest = testerlib.SubscriptionsCyclesPayRequest;
const SubscriptionsPartialInvoiceResponse = testerlib.SubscriptionsPartialInvoiceResponse;
const InvoicesStatusResponse = testerlib.InvoicesStatusResponse;
const UpdateCurrentCycleStatusRequest = testerlib.UpdateCurrentCycleStatusRequest;
const InvoicesResponse = testerlib.InvoicesResponse;
const InvoicesMetadataResponse = testerlib.InvoicesMetadataResponse;
const InvoicesMetadataRequest = testerlib.InvoicesMetadataRequest;
const InvoicesResponse2 = testerlib.InvoicesResponse2;

describe("InvoicesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Gets all invoices
     */
    it("should testTestGetInvoices response", function testTestGetInvoicesTest(done) {
        // parameters for the API call
        let page = null;
        let size = null;
        let code = null;
        let customerId = null;
        let subscriptionId = null;
        let createdSince = null;
        let createdUntil = null;
        let status = null;
        let dueSince = null;
        let dueUntil = null;
        let customerDocument = null;

        controller.getInvoices(page, size, code, customerId, subscriptionId, createdSince, createdUntil, status, dueSince, dueUntil, customerDocument, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            done();
        }).catch(() => undefined);
    });

});
