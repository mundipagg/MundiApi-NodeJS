/**
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.ChargesController;
const ChargesResponse = testerlib.ChargesResponse;
const ChargesRequest = testerlib.ChargesRequest;
const ChargesConfirmPaymentResponse = testerlib.ChargesConfirmPaymentResponse;
const CreateConfirmPaymentRequest = testerlib.CreateConfirmPaymentRequest;
const ChargesCardResponse = testerlib.ChargesCardResponse;
const ChargesCardRequest = testerlib.ChargesCardRequest;
const ChargesResponse2 = testerlib.ChargesResponse2;
const ChargesRetryResponse = testerlib.ChargesRetryResponse;
const ChargesPaymentMethodResponse = testerlib.ChargesPaymentMethodResponse;
const ChargesPaymentMethodRequest = testerlib.ChargesPaymentMethodRequest;
const ChargesMetadataResponse = testerlib.ChargesMetadataResponse;
const ChargesMetadataRequest = testerlib.ChargesMetadataRequest;
const ChargesCaptureResponse = testerlib.ChargesCaptureResponse;
const ChargesCaptureRequest = testerlib.ChargesCaptureRequest;
const ChargesDueDateResponse = testerlib.ChargesDueDateResponse;
const ChargesDueDateRequest = testerlib.ChargesDueDateRequest;
const ChargesRequest1 = testerlib.ChargesRequest1;
const ChargesTransactionsResponse = testerlib.ChargesTransactionsResponse;
const GetChargesSummaryResponse = testerlib.GetChargesSummaryResponse;

describe("ChargesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Lists all charges
     */
    it("should testTestGetCharges response", function testTestGetChargesTest(done) {
        // parameters for the API call
        let page = null;
        let size = null;
        let code = null;
        let status = null;
        let paymentMethod = null;
        let customerId = null;
        let orderId = null;
        let createdSince = null;
        let createdUntil = null;

        controller.getCharges(page, size, code, status, paymentMethod, customerId, orderId, createdSince, createdUntil, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            done();
        }).catch(() => undefined);
    });

});
